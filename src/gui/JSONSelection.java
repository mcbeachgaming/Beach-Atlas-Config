/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author Kevin
 */
public class JSONSelection extends javax.swing.JFrame {

    int[] info;
    common.atlas.AtlasJSONParser parse;

    /**
     * Creates new form JSONSelection
     */
    public JSONSelection() {
        initComponents();
        this.setTitle("Beach Config Manager");
        try {
            URL whatismyip = new URL("http://checkip.amazonaws.com");
            BufferedReader in = new BufferedReader(new InputStreamReader(
                    whatismyip.openStream()));

            String ip = in.readLine(); //you get the IP as a String
            ipField.setText(ip);
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fileField = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        statusArea = new javax.swing.JTextArea();
        overwriteBox = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        xLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        yLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        queryStartField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        gameEndField = new javax.swing.JTextField();
        queryEndField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        seamlessStartField = new javax.swing.JTextField();
        seamlessEndField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        rconStartField = new javax.swing.JTextField();
        rconEndField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        ramField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        processButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        ipField = new javax.swing.JTextField();
        gameStartField = new javax.swing.JTextField();
        discoveryBox = new javax.swing.JCheckBox();
        nameBox = new javax.swing.JCheckBox();
        populateBox = new javax.swing.JCheckBox();
        transientBox = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("JSON Configurator"));

        jLabel1.setText("ServerGrid.json location:");

        fileField.setEditable(false);

        browseButton.setText("Browse");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        statusArea.setColumns(20);
        statusArea.setLineWrap(true);
        statusArea.setRows(5);
        statusArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(statusArea);

        overwriteBox.setText("Overwrite?");
        overwriteBox.setToolTipText("If you want to preserve two copies, do not check this box");
        overwriteBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overwriteBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("X Grids:");
        jLabel3.setToolTipText("");

        xLabel.setText("0");

        jLabel4.setText("Y Grids:");

        yLabel.setText("0");

        jLabel5.setText("Game");

        jLabel6.setText("Query");

        queryStartField.setText("57560");
        queryStartField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                queryStartFieldKeyReleased(evt);
            }
        });

        jLabel7.setText("Start Port");

        jLabel8.setText("End Port");

        gameEndField.setEditable(false);
        gameEndField.setText("0");

        queryEndField.setEditable(false);
        queryEndField.setText("0");

        jLabel9.setText("Seamless");

        seamlessStartField.setText("27000");
        seamlessStartField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                seamlessStartFieldKeyReleased(evt);
            }
        });

        seamlessEndField.setEditable(false);
        seamlessEndField.setText("0");

        jLabel10.setText("RCON");

        rconStartField.setText("47560");
        rconStartField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rconStartFieldKeyReleased(evt);
            }
        });

        rconEndField.setEditable(false);
        rconEndField.setText("0");

        jLabel11.setText("RAM recommended:");

        ramField.setEditable(false);

        jLabel12.setText("GB");

        processButton.setText("Process");
        processButton.setEnabled(false);
        processButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processButtonActionPerformed(evt);
            }
        });

        jLabel13.setText("IP Address:");

        ipField.setText("127.0.0.1");

        gameStartField.setText("5760");
        gameStartField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                gameStartFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                gameStartFieldKeyTyped(evt);
            }
        });

        discoveryBox.setText("Fill in Discovery Zones");

        nameBox.setText("Give Server Names From Templates");
        nameBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameBoxActionPerformed(evt);
            }
        });

        populateBox.setText("Populate Power Stones and Essences");

        transientBox.setText("Add Transient Nodes");
        transientBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transientBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(yLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(fileField, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(browseButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(xLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(queryStartField)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(seamlessStartField)
                            .addComponent(rconStartField)
                            .addComponent(gameStartField))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rconEndField, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(seamlessEndField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(gameEndField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(queryEndField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(overwriteBox)
                                        .addGap(18, 18, 18)
                                        .addComponent(processButton))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(discoveryBox)
                                            .addComponent(nameBox)
                                            .addComponent(populateBox)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel13)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(ipField))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel11)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(ramField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jLabel12)))
                                            .addComponent(transientBox))
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(xLabel)
                    .addComponent(jLabel11)
                    .addComponent(ramField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(yLabel)
                    .addComponent(jLabel13)
                    .addComponent(ipField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(gameEndField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gameStartField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(discoveryBox))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(queryStartField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(queryEndField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameBox))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(seamlessStartField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seamlessEndField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(populateBox))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(rconStartField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rconEndField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transientBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(overwriteBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Informational"));

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("This configurator does a couple of things.  When you select your ServerGrid.json file, it will pull the number of x grids and y grids, and begin to populate suggested ports that would need to be forwarded.  The ip address is retrieved from amazon aws.\n\nGame, Query and RCON ports will do port number +1.  This may be removed in future releases, but keeping in place for the moment.  Seamless increments by 1 for each grid.  These ports and the external ip are saved to the json.  This program uses amazonaws to prune your external ip address.  \n\nUsing the check box for Fill in Discovery Zones will only add discovery names from the discozones text file located in resources.  It assigns the names from the top of the file downward, so if you decide you want some of yours assigned, put them at the top of the file.  Names will be repeated if you have more discovery zones than the number of lines in the file.\n\nThe Give Server Names From Templates option will, if server templates used when creating the servergrid, make the server name be named as server template name_increment, e.g. Polar_1, Low Desert_2.  This only writes to names that are not set.  This option is useful if you want to give your players a heads up for what type of template the grid they are going is.\n\nThe Populate Power Stones and Essences will set the quest entries to the correct islands.  The quest location points just to the island itself, not to the specific location on the island.  This option is disabled if when you specify your json it does not contai each of the PVE islands and at least 9 trenches.  This will also set the quest location for the kraken if one of your grids has the extraSublevels set for EndBossLevel.\n\nThe add transient nodes check box will add cursed and sulfurous ground to the islands specified in the transient.txt file.  These islands were pulled from the official json, but can add additional islands to the file.  This will alternate between the two transient types.\n\nSelecting the overwrite option will overwrite all the changes to the json.  This is not recommended in early versions of the program.");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane3.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());

        int returnValue = jfc.showOpenDialog(null);
        // int returnValue = jfc.showSaveDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            try {
                File selectedFile = jfc.getSelectedFile();
                fileField.setText(selectedFile.getAbsolutePath());

                //start the initial processing
                parse = new common.atlas.AtlasJSONParser(selectedFile);
                info = parse.getBaseInfo();

                xLabel.setText(info[0] + "");
                yLabel.setText(info[1] + "");
                ramField.setText(info[2] + "");
                processButton.setEnabled(true);
                int totalGrids = info[0] * info[1];
                int increment = totalGrids * 2;
                gameEndField.setText((Integer.parseInt(gameStartField.getText().trim()) + increment) + "");
                queryEndField.setText((Integer.parseInt(queryStartField.getText().trim()) + increment) + "");
                seamlessEndField.setText((Integer.parseInt(seamlessStartField.getText().trim()) + totalGrids) + "");
                rconEndField.setText((Integer.parseInt(rconStartField.getText().trim()) + increment) + "");

                if (!parse.hasPowerStoneIslands()) {
                    statusArea.append("Missing a powerstone island(s), quest locations cannot be updated fully.\n");
                }
                if (!parse.hasEnoughTrenches()) {
                    statusArea.append("Not enough trenches to populate essences.  Need at least 9\n");
                }
                if(!parse.hasKraken()){
                     statusArea.append("The kraken endboss level not detected for any grid.\n");
                }
            } catch (FileNotFoundException ex) {
                statusArea.append("File not found or incorrect format\n");
            }

        }
    }//GEN-LAST:event_browseButtonActionPerformed

    private void processButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processButtonActionPerformed
//int game, int query, int rcon, int seam, String ip
        int game = Integer.parseInt(gameStartField.getText());
        int query = Integer.parseInt(queryStartField.getText());
        int rcon = Integer.parseInt(rconStartField.getText());
        int seam = Integer.parseInt(seamlessStartField.getText());
        String ip = ipField.getText();
        File selectedFile = new File(fileField.getText());
        try {
            //start the initial processing
            parse = new common.atlas.AtlasJSONParser(selectedFile, game, query, rcon, seam, ip);
            parse.loadJSONFile();
            String steps = "";
            if (populateBox.isSelected()) {
                parse.calculateQuests();
                steps = steps + "Powerstones and essences ";
            }
            if (nameBox.isSelected()) {
                parse.setTemplateNames();
                steps = steps + "Template names ";
            }

            if (discoveryBox.isSelected()) {
                parse.setDiscoveryZoneNames();
                steps = steps + " Discovery zones ";
            }
            if (transientBox.isSelected()) {
                parse.setTransientNodes();
                steps = steps + "Transient nodes ";
            }
            boolean overwrite = overwriteBox.isSelected();
            parse.writeJSONFile(steps, overwrite);

      
     

        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_processButtonActionPerformed

    private void openFirewallRules() throws IOException {
        int gameStart = Integer.parseInt(gameStartField.getText());
        int queryStart = Integer.parseInt(queryStartField.getText());
        int rconStart = Integer.parseInt(rconStartField.getText());
        int seamStart = Integer.parseInt(seamlessStartField.getText());
        int gameEnd = Integer.parseInt(gameEndField.getText());
        int queryEnd = Integer.parseInt(queryEndField.getText());
        int rconEnd = Integer.parseInt(rconEndField.getText());
        int seamEnd = Integer.parseInt(seamlessEndField.getText());
        ArrayList<String> firewalls = new ArrayList<>();
        firewalls.add(getFirewallInfo("Game", "TCP", gameStart, gameEnd));
        firewalls.add(getFirewallInfo("Game", "UDP", gameStart, gameEnd));

        firewalls.add(getFirewallInfo("Query", "TCP", queryStart, queryEnd));
        firewalls.add(getFirewallInfo("Query", "UDP", queryStart, queryEnd));
        
        firewalls.add(getFirewallInfo("RCON", "TCP", rconStart, rconEnd));
        firewalls.add(getFirewallInfo("RCON", "UDP", rconStart, rconEnd));
        
        firewalls.add(getFirewallInfo("Seamless", "TCP", seamStart, seamEnd));
        firewalls.add(getFirewallInfo("Seamless", "UDP", seamStart, seamEnd));
        
        
        for(String firewall : firewalls){
            String command = "cmd /c start "+firewall;
            Process p = Runtime.getRuntime().exec(command);
        }
    }

    private String getFirewallInfo(String name, String protocol, int start, int end) {
        String firewall = "netsh advfirewall firewall add rule name=\"Atlas " + name + " " + protocol + "\" dir=\"in\" action=allow protocol=" + protocol + " remotePort=" + start + "-" + end;
        return firewall;
    }


    private void gameStartFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gameStartFieldKeyReleased
        if (gameStartField.getText().length() > 0) {
            int totalGrids = info[0] * info[1];
            int increment = totalGrids * 2;
            gameEndField.setText((Integer.parseInt(gameStartField.getText().trim()) + increment) + "");
            queryEndField.setText((Integer.parseInt(queryStartField.getText().trim()) + increment) + "");
            seamlessEndField.setText((Integer.parseInt(seamlessStartField.getText().trim()) + totalGrids) + "");
            rconEndField.setText((Integer.parseInt(rconStartField.getText().trim()) + increment) + "");
        }
    }//GEN-LAST:event_gameStartFieldKeyReleased

    private void gameStartFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gameStartFieldKeyTyped

    }//GEN-LAST:event_gameStartFieldKeyTyped

    private void queryStartFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_queryStartFieldKeyReleased
        if (queryStartField.getText().length() > 0) {
            int totalGrids = info[0] * info[1];
            int increment = totalGrids * 2;
            gameEndField.setText((Integer.parseInt(gameStartField.getText().trim()) + increment) + "");
            queryEndField.setText((Integer.parseInt(queryStartField.getText().trim()) + increment) + "");
            seamlessEndField.setText((Integer.parseInt(seamlessStartField.getText().trim()) + totalGrids) + "");
            rconEndField.setText((Integer.parseInt(rconStartField.getText().trim()) + increment) + "");
        }
    }//GEN-LAST:event_queryStartFieldKeyReleased

    private void seamlessStartFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_seamlessStartFieldKeyReleased
        if (seamlessStartField.getText().length() > 0) {
            int totalGrids = info[0] * info[1];
            int increment = totalGrids * 2;
            gameEndField.setText((Integer.parseInt(gameStartField.getText().trim()) + increment) + "");
            queryEndField.setText((Integer.parseInt(queryStartField.getText().trim()) + increment) + "");
            seamlessEndField.setText((Integer.parseInt(seamlessStartField.getText().trim()) + totalGrids) + "");
            rconEndField.setText((Integer.parseInt(rconStartField.getText().trim()) + increment) + "");
        }
    }//GEN-LAST:event_seamlessStartFieldKeyReleased

    private void rconStartFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rconStartFieldKeyReleased
        if (rconStartField.getText().length() > 0) {
            int totalGrids = info[0] * info[1];
            int increment = totalGrids * 2;
            gameEndField.setText((Integer.parseInt(gameStartField.getText().trim()) + increment) + "");
            queryEndField.setText((Integer.parseInt(queryStartField.getText().trim()) + increment) + "");
            seamlessEndField.setText((Integer.parseInt(seamlessStartField.getText().trim()) + totalGrids) + "");
            rconEndField.setText((Integer.parseInt(rconStartField.getText().trim()) + increment) + "");
        }
    }//GEN-LAST:event_rconStartFieldKeyReleased

    private void nameBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameBoxActionPerformed

    private void transientBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transientBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_transientBoxActionPerformed

    private void overwriteBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_overwriteBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_overwriteBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JSONSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JSONSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JSONSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JSONSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JSONSelection().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseButton;
    private javax.swing.JCheckBox discoveryBox;
    private javax.swing.JTextField fileField;
    private javax.swing.JTextField gameEndField;
    private javax.swing.JTextField gameStartField;
    private javax.swing.JTextField ipField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JCheckBox nameBox;
    private javax.swing.JCheckBox overwriteBox;
    private javax.swing.JCheckBox populateBox;
    private javax.swing.JButton processButton;
    private javax.swing.JTextField queryEndField;
    private javax.swing.JTextField queryStartField;
    private javax.swing.JTextField ramField;
    private javax.swing.JTextField rconEndField;
    private javax.swing.JTextField rconStartField;
    private javax.swing.JTextField seamlessEndField;
    private javax.swing.JTextField seamlessStartField;
    public static javax.swing.JTextArea statusArea;
    private javax.swing.JCheckBox transientBox;
    private javax.swing.JLabel xLabel;
    private javax.swing.JLabel yLabel;
    // End of variables declaration//GEN-END:variables
}
